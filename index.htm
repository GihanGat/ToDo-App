<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>To-Do List</title>
    <style>
        :root,
        html {
            --root-font-size: calc(1rem + 4 * ((75vw - 200px) / (980 - 300)));
            background-color: antiquewhite;
            font-family: Georgia, 'Times New Roman', Times, serif;
        }

        li {
            list-style-type: none;
        }

        body {
            padding-top: 2em;
            scroll-padding-bottom: 25%;
            display: grid;
            grid-template-columns: 1fr 90vw 1fr;
            grid-template-rows: 0.5fr 3fr 1fr;
        }

        header {
            grid-column: 1 / 4;
            grid-row: 1 / 2;
            justify-items: stretch;
            display: flex;
            flex-direction: row;
            /* background-color: #d5c9e2; */
            justify-content: center;
            border-bottom: 0.1em rgba(143, 143, 143, 0.4) solid;
            font-family: cursive;
        }

        h1 {
            animation: 5s ease infinite pulse;
        }

        main {
            grid-column: 2/3;
            grid-row: 2/3;
            /* background-color: #d5c9e2; */
            padding-top: var(--root-font-size, 1rem);
            display: flex;
            flex-direction: row;
            justify-content: center;
            flex-basis: auto;
        }

        #todo-label {
            height: var(--root-font-size, 1.5rem);
            font-size: large;
            width: 50%;
        }

        #list_items::after {
            content: ".";
        }

        input[type="text"]:focus {
            background-color: rgb(170, 214, 240);
        }

        input[type="checkbox"]:checked {
            box-shadow: 0 0 0 3px rgb(90, 181, 241);
        }

        input[type="checkbox"]:checked+label {
            text-decoration: line-through;
        }

        #todo-add {
            height: var(--root-font-size, 1rem);
            width: var(--root-font-size, 1rem);
        }

        template>* {
            height: var(--root-font-size, 3rem);
        }

        #todo-list {
            animation-duration: 2s;
            animation-name: bounceIn;
        }

        li {
            display: grid;
            grid-template-columns: 6fr 1fr;
        }

        #list_items {
            grid-column: 1 / 2;
            height: var(--root-font-size, 1rem);
            font-size:var(--root-font-size, 1rem);
        }

        #mod-btns {
            display: flex;
            grid-column: 2 / 3;
            height: var(--root-font-size, 1rem);
            width: var(--root-font-size, 1rem);
        }

        /*   #todo-remove{
            grid-column: 2 / 3; 
        }
        
        #todo-edit{
            grid-column: 3 / 4; 
        }  */

        footer {
            grid-column: 1 / 4;
            grid-row: 4 / 5;
            /* background-color: #d5c9e2; */
            display: flex;
            align-items: flex-start;
            border-top: 0.1em rgba(143, 143, 143, 0.4) solid;
        }

        footer::after {
            content: "Â© 2019 Copyright";
            font-size: 1em;
            position: absolute;
        }

/*         #todo-prompt:before {
            content: "Add a To-Do";
        } */

        @keyframes bounceIn {
            0% {
                transform: scale(0.1);
                opacity: 0;
            }

            60% {
                transform: scale(1.2);
                opacity: 1;
            }

            100% {
                transform: scale(1);
            }
        }

        @keyframes pulse {
            0% {
                color: #f53708;
                transform: scale(1);
            }

            25% {
                color: darken(#f53708, 10%);
                transform: scale(1.015);
            }

            50% {
                color: #f53708;
                transform: scale(1);
            }
        }

        @media screen {
            body {
                padding-top: 2em;
                display: grid;
                grid-template-columns: 1fr 50vw 1fr;
                grid-template-rows: 0.5fr 3fr 1fr;
            }
        }

        @media screen {
            #todo-label {
                height: var(--root-font-size, 1rem);
                font-size: medium;
                width: 30%;
            }
        }

        @media screen and (min-width: 481px) and (max-width: 2000px) {
            #todo-prompt:before {
                content: "Add a To-Do";
            }
        }

        @media screen and (min-width: 320px) and (max-width: 480px) {
            #todo-prompt:before {
                content: "To Do";
            }
        }
    </style>
</head>

<body onload=refreshFromLS()>
    <header>
        <h1>To Do Things</h1>
    </header>
    <main>
        <div class="todoform">
            <form action="/" method="get">
                <label id="todo-prompt" for="todo-label"></label>
                <input id="todo-label" type="text" name="todo-label">
                <input id="todo-add" type="image" src="img/add.svg" alt="Add a To Do Item">
            </form>
            <form action="/" method="get">
                <ul id="todo-list">
                </ul>
            </form>
        </div>
        <template id="todo-item">
            <li>
                <div class="example example-three" id="list_items">
                    <input id="todo-select" type="checkbox" name="todo-select" onclick="updateLScontent(this)"
                        alt="Select todo's for mark it as completed">
                    <label for="todo-select" alt="Entered to do item description"></label>
                </div>
                <div id="mod-btns">
                    <input id="todo-remove" for="todo-select" name="todo-remove" type="image" src="img/remove.svg"
                        alt="Remove a Selected To Do's" onclick="rmvBtnClick(this)">
                    <input id="todo-edit" for="todo-select" name="todo-edit" type="image" src="img/edit.svg"
                        alt="Edit the selected To Do" onclick="editBtnClick(this)">
                </div>
            </li>
        </template>
        <script src="js/index.js"></script>
        <script>
            if ('serviceWorker' in navigator) {
                window.addEventListener('load', function () {
                    navigator.serviceWorker.register('/js/sw.js').then(function (registration) {
                        console.log('ServiceWorker registration successful');
                    }, function (err) {
                        console.log('ServiceWorker registration failed: ', err);
                    });
                });
            }
        </script>
    </main>
    <footer>
        <!-- <p>Copyright &copy;2019<p> -->
    </footer>
</body>

</html>